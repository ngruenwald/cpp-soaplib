#find_package(soaplib REQUIRED)

file(GLOB_RECURSE SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.cpp)
file(GLOB MAIN_HEADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.hpp)
file(GLOB TYPE_HEADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} types/*.hpp)

add_library(DispatcherService STATIC ${SOURCES} ${MAIN_HEADERS} ${TYPE_HEADERS})
add_library(admin::DispatcherService ALIAS DispatcherService)

target_link_libraries(DispatcherService PUBLIC soaplib::soaplib)
target_include_directories(DispatcherService PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..> $<INSTALL_INTERFACE:${HEADER_INSTALL_PATH}>)

if(WIN32)
  set_target_properties(DispatcherService PROPERTIES RELEASE_POSTFIFX "_static_${COMPILER_POSTFIX}" RELWITHDEBINFO_POSTFIX "_static_${COMPILER_POSTFIX}" DEBUG_POSTFIX "_static_${COMPILER_POSTFIX}d")
else()
  set_target_properties(DispatcherService PROPERTIES RELEASE_POSTFIX "-${PROJECT_VERSION}" RELWITHDEBINFO_POSTFIX "-${PROJECT_VERSION}" DEBUG_POSTFIX "-${PROJECT_VERSION}d")
endif()

install(FILES ${MAIN_HEADERS} DESTINATION ${HEADER_INSTALL_PATH}/DispatcherService)
install(FILES ${TYPE_HEADERS} DESTINATION ${HEADER_INSTALL_PATH}/DispatcherService/types)

install(
  TARGETS DispatcherService
  EXPORT  adminlib
  RUNTIME DESTINATION ${LIBRARY_INSTALL_PATH}
  LIBRARY DESTINATION ${LIBRARY_INSTALL_PATH}
  ARCHIVE DESTINATION ${LIBRARY_INSTALL_PATH}
)

